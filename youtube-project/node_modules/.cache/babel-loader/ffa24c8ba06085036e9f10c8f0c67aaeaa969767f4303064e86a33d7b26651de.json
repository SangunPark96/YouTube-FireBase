{"ast":null,"code":"const BASE_URL = \"https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\n// For a regular search use BASE_URL + 'part=snippet&maxResults=25&q=surfing&key=[YOUR_API_KEY]'\n\n// When searching for videos use the <snippet.channelId> after 'relatedToVideoId=' from the JSON: BASE_URL + 'part=snippet&relatedToVideoId=Ks-_Mh1QhMc&type=video&key=[YOUR_API_KEY]'\n\nexport function getVideos(keyword, videoQuantity) {\n  // return fetch(`${BASE_URL}${videoQuantity}&q=${keyword}&key=${API_KEY}`).then(response => response.json());\n\n  // Temporary mock fetch\n\n  // return fetch('./testApi.json').then(response => console.log(response));\n\n  return fetch('./testApi.jsontestApi.json').then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).then(data => {\n    console.log(data);\n    return data;\n  }).catch(error => {\n    console.error('Error fetching videos:', error);\n  });\n}","map":{"version":3,"names":["BASE_URL","API_KEY","process","env","REACT_APP_API_KEY","getVideos","keyword","videoQuantity","fetch","then","response","ok","Error","json","data","console","log","catch","error"],"sources":["/Users/joshuanelson/Pursuit/youtube-project/src/api/fetch.js"],"sourcesContent":["\nconst BASE_URL = \"https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\n\n\n// For a regular search use BASE_URL + 'part=snippet&maxResults=25&q=surfing&key=[YOUR_API_KEY]'\n\n// When searching for videos use the <snippet.channelId> after 'relatedToVideoId=' from the JSON: BASE_URL + 'part=snippet&relatedToVideoId=Ks-_Mh1QhMc&type=video&key=[YOUR_API_KEY]'\n\nexport function getVideos(keyword, videoQuantity) {\n    // return fetch(`${BASE_URL}${videoQuantity}&q=${keyword}&key=${API_KEY}`).then(response => response.json());\n\n    // Temporary mock fetch\n\n    // return fetch('./testApi.json').then(response => console.log(response));\n\n    return fetch('./testApi.jsontestApi.json')\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      console.log(data);\n      return data;\n    })\n    .catch(error => {\n      console.error('Error fetching videos:', error);\n    });\n}\n\n"],"mappings":"AACA,MAAMA,QAAQ,GAAG,2EAA2E;AAC5F,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;;AAI7C;;AAEA;;AAEA,OAAO,SAASC,SAASA,CAACC,OAAO,EAAEC,aAAa,EAAE;EAC9C;;EAEA;;EAEA;;EAEA,OAAOC,KAAK,CAAC,4BAA4B,CAAC,CACzCC,IAAI,CAACC,QAAQ,IAAI;IAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAOF,QAAQ,CAACG,IAAI,EAAE;EACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;IACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,OAAOA,IAAI;EACb,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;IACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;EAChD,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}