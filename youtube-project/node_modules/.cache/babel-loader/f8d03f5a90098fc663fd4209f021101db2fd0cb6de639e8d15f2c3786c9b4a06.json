{"ast":null,"code":"var _jsxFileName = \"/Users/joshuanelson/Pursuit/youtube-project/src/components/Comments/Comments.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport './Comments.css';\nimport { AiOutlineUser } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comments(_ref) {\n  _s();\n  let {\n    allComments,\n    setAllComments\n  } = _ref;\n  const initialComment = {\n    commenter: \"\",\n    text: \"\"\n  };\n  const initialFocus = {\n    text: false,\n    commenter: false\n  };\n  const [focus, setFocus] = useState(initialFocus);\n  const [visibility, setVisibility] = useState(false);\n  const [comment, setComment] = useState(initialComment);\n  function handleInput(event) {\n    setComment({\n      ...comment,\n      [event.target.id]: event.target.value\n    });\n    if (event.target.value !== \"\") {\n      setFocus({\n        ...focus,\n        [event.target.id]: true\n      });\n    } else {\n      setFocus({\n        ...focus,\n        [event.target.id]: false\n      });\n    }\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    setAllComments([...allComments, comment]);\n    setComment(initialComment);\n    setFocus(initialFocus);\n  }\n  function toggleComments(event) {\n    if (event.target.id === \"text\") {\n      setVisibility(true);\n    } else {\n      setVisibility(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentsDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"commentsForm\",\n      onSubmit: handleSubmit,\n      children: [visibility && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleInput,\n        id: \"commenter\",\n        value: comment.commenter,\n        placeholder: \"Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onClick: toggleComments,\n        onChange: handleInput,\n        id: \"text\",\n        className: \"addComment\",\n        type: \"text\",\n        placeholder: \"Add a comment...\",\n        value: comment.text,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"focus-border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), visibility && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentButtonsDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleComments,\n          className: \"cancelButton\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Comment\",\n          id: \"submitComment\",\n          style: {\n            background: focus.text && focus.commenter ? '#4caf50' : '#EFEFEF',\n            color: focus.text && focus.commenter ? 'white' : 'black'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: allComments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commentsSection\",\n          children: [/*#__PURE__*/_jsxDEV(AiOutlineUser, {\n            className: \"userIcon\",\n            size: 25\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"commentsSection-commenter\",\n            children: comment.commenter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"commentsSection-text\",\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(Comments, \"/K+NXnVzycjKwoZsaWf3x7Sp804=\");\n_c = Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","AiOutlineUser","jsxDEV","_jsxDEV","Comments","_ref","_s","allComments","setAllComments","initialComment","commenter","text","initialFocus","focus","setFocus","visibility","setVisibility","comment","setComment","handleInput","event","target","id","value","handleSubmit","preventDefault","toggleComments","className","children","onSubmit","type","onChange","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","background","color","map","size","_c","$RefreshReg$"],"sources":["/Users/joshuanelson/Pursuit/youtube-project/src/components/Comments/Comments.js"],"sourcesContent":["import { useState } from \"react\";\nimport './Comments.css';\nimport { AiOutlineUser } from \"react-icons/ai\";\n\nexport default function Comments({ allComments, setAllComments }) {\n    const initialComment = {\n        commenter: \"\",\n        text: \"\"\n    }\n\n    const initialFocus = {\n        text: false,\n        commenter: false\n    }\n    \n    const [focus, setFocus] = useState(initialFocus);\n    const [visibility, setVisibility] = useState(false);\n    const [comment, setComment] = useState(initialComment);\n\n    function handleInput(event) {\n        setComment({...comment, [event.target.id]: event.target.value });\n        if (event.target.value !== \"\") {\n            setFocus({...focus, [event.target.id]: true });\n        } else {\n            setFocus({...focus, [event.target.id]: false });\n        }\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        \n        setAllComments([...allComments, comment]);\n        setComment(initialComment);\n        setFocus(initialFocus);\n    }\n\n    function toggleComments(event) {\n        if (event.target.id === \"text\") {\n            setVisibility(true);\n        } else {\n            setVisibility(false);\n        }\n    }\n\n    return (\n        <div className='commentsDiv'>\n            <form id=\"commentsForm\" onSubmit={handleSubmit}>\n                {visibility && <input type=\"text\" onChange={handleInput} id=\"commenter\" value={comment.commenter} placeholder=\"Name\" required />}\n                <input  onClick={toggleComments} onChange={handleInput} id=\"text\" className='addComment' type=\"text\" placeholder=\"Add a comment...\" value={comment.text} required />\n                <span className='focus-border'></span>\n                {visibility && \n                    <div className=\"commentButtonsDiv\">\n                        <button onClick={toggleComments} className=\"cancelButton\">Cancel</button>\n                        <input \n                            type=\"submit\"\n                            value=\"Comment\" \n                            id=\"submitComment\"  \n                            style={{\n                                background: (focus.text && focus.commenter) ? '#4caf50' : '#EFEFEF',\n                                color: (focus.text && focus.commenter) ? 'white' : 'black'\n                            }}\n                        />\n                    </div>\n                }\n            </form>\n            <div>\n                {allComments.map(comment => {\n                    return (\n                        <div className=\"commentsSection\">\n                            <AiOutlineUser  className=\"userIcon\" size={25} />\n                            <span className=\"commentsSection-commenter\">{comment.commenter}</span>\n                            <li className=\"commentsSection-text\">{comment.text}</li>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}