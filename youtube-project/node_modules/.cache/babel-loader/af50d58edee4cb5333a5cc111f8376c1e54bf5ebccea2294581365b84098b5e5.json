{"ast":null,"code":"var _jsxFileName = \"/Users/joshuanelson/Pursuit/youtube-project/src/components/Home/Home.js\",\n  _s = $RefreshSig$();\nimport './Home.css';\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getVideos } from '../../api/fetch';\nimport { v1 as generateUniqueID } from \"uuid\";\nimport VideoIndex from \"../VideoIndex\";\nimport testApi from \"../../api/testApi.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  // const [error, setError ] = useState(false)\n  const [videos, setVideos] = useState([]);\n  const navigate = useNavigate();\n  const [userSearchInput, setUserSearchInput] = useState(\"\");\n  const [searchHistory, setSearchHistory] = useState([]);\n  const [videoQuantity, setVideoQuantity] = useState(10);\n  function handleTextInput(event) {\n    event.preventDefault();\n    setUserSearchInput(event.target.value);\n  }\n  function handleSearch(event) {\n    event.preventDefault();\n    if (userSearchInput) {\n      const duplicateSearch = searchHistory.find(input => input.search.toLowerCase() === userSearchInput.toLowerCase());\n      if (!duplicateSearch) {\n        setSearchHistory([...searchHistory, {\n          search: userSearchInput,\n          id: generateUniqueID()\n        }]);\n      }\n\n      //Reset the state\n      setUserSearchInput(\"\");\n\n      //Make fetch call\n      getVideos(testApi, videoQuantity) //Use testApi when trying to limit the number of calls to the api, otherwise use useSearchInput\n      .then(response => {\n        setVideos(response.items);\n        navigate(`/videos\"`);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleTextInput,\n          value: userSearchInput,\n          type: \"text\",\n          id: \"searchInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VideoIndex, {\n        videos: videos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Home, \"VHomH+e4RIEEmw5ODdVxHf9b6Xo=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useNavigate","getVideos","v1","generateUniqueID","VideoIndex","testApi","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","videos","setVideos","navigate","userSearchInput","setUserSearchInput","searchHistory","setSearchHistory","videoQuantity","setVideoQuantity","handleTextInput","event","preventDefault","target","value","handleSearch","duplicateSearch","find","input","search","toLowerCase","id","then","response","items","catch","error","console","log","children","onSubmit","className","onChange","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joshuanelson/Pursuit/youtube-project/src/components/Home/Home.js"],"sourcesContent":["import './Home.css';\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getVideos } from '../../api/fetch';\nimport {v1 as generateUniqueID} from \"uuid\";\nimport VideoIndex from \"../VideoIndex\";\nimport testApi from \"../../api/testApi.json\";\n\n\n\nexport default function Home() {\n  // const [error, setError ] = useState(false)\n  const [videos, setVideos ] = useState([])\n  const navigate = useNavigate();\n  const [userSearchInput, setUserSearchInput] = useState(\"\");\n  const [searchHistory, setSearchHistory] = useState([]);\n  const [videoQuantity, setVideoQuantity] = useState(10);\n\n  function handleTextInput(event) {\n    event.preventDefault();\n    setUserSearchInput(event.target.value);\n  }\n\n  function handleSearch(event){\n    event.preventDefault();\n    if (userSearchInput) {\n      const duplicateSearch = searchHistory.find(input => (input.search).toLowerCase() === userSearchInput.toLowerCase())\n      if (!duplicateSearch) {\n        setSearchHistory([...searchHistory, {search: userSearchInput, id: generateUniqueID()}]);\n      } \n\n      //Reset the state\n      setUserSearchInput(\"\")\n    \n      //Make fetch call\n      getVideos(testApi, videoQuantity) //Use testApi when trying to limit the number of calls to the api, otherwise use useSearchInput\n      .then(response => {\n        setVideos(response.items);\n        navigate(`/videos\"`)\n\n        }).catch(error => {\n          console.log(error)\n        })\n    }\n\n    \n  };\n\n\n  \n  \n  return (\n    <>\n      <main>\n        <form onSubmit={handleSearch} className=\"search-bar\">\n          <input onChange={handleTextInput} value={userSearchInput} type=\"text\" id=\"searchInput\" />\n          <input type=\"submit\" />\n        </form>\n        <div>{/* Initial thumbnails/map over api data will go here */}</div>\n        <VideoIndex videos={videos} />\n      </main>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}