{"ast":null,"code":"var _jsxFileName = \"/Users/joshuanelson/Pursuit/youtube-project/src/components/Home/Home.js\",\n  _s = $RefreshSig$();\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home(_ref) {\n  _s();\n  let {\n    setVideos\n  } = _ref;\n  // const [error, setError ] = useState(false)\n  // const [videos, setVideos ] = useState([])\n  const navigate = useNavigate();\n  const [userSearchInput, setUserSearchInput] = useState(\"\");\n  const [searchHistory, setSearchHistory] = useState([]);\n  const [videoQuantity, setVideoQuantity] = useState(10);\n  function handleTextInput(event) {\n    event.preventDefault();\n    setUserSearchInput(event.target.value);\n  }\n  function handleSearch(event) {\n    event.preventDefault();\n    if (userSearchInput) {\n      const duplicateSearch = searchHistory.find(input => input.search.toLowerCase() === userSearchInput.toLowerCase());\n      if (!duplicateSearch) {\n        setSearchHistory([...searchHistory, {\n          search: userSearchInput,\n          id: generateUniqueID()\n        }]);\n      }\n\n      //Reset the state\n      setUserSearchInput(\"\");\n\n      //Make fetch call\n      getVideos(userSearchInput, videoQuantity) //Use testApi when trying to limit the number of calls to the api, otherwise use useSearchInput\n      .then(response => {\n        setVideos(response.items);\n        navigate(`/videos`);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search for a video to see results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"G/ZsOy8S4Dw8Bn+fgrzSjHij1Ak=\", true);\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Home","_ref","_s","setVideos","navigate","useNavigate","userSearchInput","setUserSearchInput","useState","searchHistory","setSearchHistory","videoQuantity","setVideoQuantity","handleTextInput","event","preventDefault","target","value","handleSearch","duplicateSearch","find","input","search","toLowerCase","id","generateUniqueID","getVideos","then","response","items","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joshuanelson/Pursuit/youtube-project/src/components/Home/Home.js"],"sourcesContent":["import './Home.css';\n\n\n\nexport default function Home({ setVideos }) {\n  // const [error, setError ] = useState(false)\n  // const [videos, setVideos ] = useState([])\n  const navigate = useNavigate();\n  const [userSearchInput, setUserSearchInput] = useState(\"\");\n  const [searchHistory, setSearchHistory] = useState([]);\n  const [videoQuantity, setVideoQuantity] = useState(10);\n\n  function handleTextInput(event) {\n    event.preventDefault();\n    setUserSearchInput(event.target.value);\n  }\n\n  function handleSearch(event){\n    event.preventDefault();\n    if (userSearchInput) {\n      const duplicateSearch = searchHistory.find(input => (input.search).toLowerCase() === userSearchInput.toLowerCase())\n      if (!duplicateSearch) {\n        setSearchHistory([...searchHistory, {search: userSearchInput, id: generateUniqueID()}]);\n      } \n\n      //Reset the state\n      setUserSearchInput(\"\")\n    \n      //Make fetch call\n      getVideos(userSearchInput, videoQuantity) //Use testApi when trying to limit the number of calls to the api, otherwise use useSearchInput\n      .then(response => {\n        setVideos(response.items);\n        navigate(`/videos`)\n\n        }).catch(error => {\n          console.log(error)\n        })\n    }\n\n    \n  };\n  \n  \n  return (\n    <main>\n      <h1>Search for a video to see results</h1>;\n    </main>\n  );\n}\n"],"mappings":";;AAAA,OAAO,YAAY;AAAC,SAAAA,MAAA,IAAAC,OAAA;AAIpB,eAAe,SAASC,IAAIA,CAAAC,IAAA,EAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAU,CAAC,GAAAF,IAAA;EACxC;EACA;EACA,MAAMG,QAAQ,GAAGC,WAAW,EAAE;EAC9B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEtD,SAASK,eAAeA,CAACC,KAAK,EAAE;IAC9BA,KAAK,CAACC,cAAc,EAAE;IACtBR,kBAAkB,CAACO,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EACxC;EAEA,SAASC,YAAYA,CAACJ,KAAK,EAAC;IAC1BA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAIT,eAAe,EAAE;MACnB,MAAMa,eAAe,GAAGV,aAAa,CAACW,IAAI,CAACC,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAEC,WAAW,EAAE,KAAKjB,eAAe,CAACiB,WAAW,EAAE,CAAC;MACnH,IAAI,CAACJ,eAAe,EAAE;QACpBT,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAE;UAACa,MAAM,EAAEhB,eAAe;UAAEkB,EAAE,EAAEC,gBAAgB;QAAE,CAAC,CAAC,CAAC;MACzF;;MAEA;MACAlB,kBAAkB,CAAC,EAAE,CAAC;;MAEtB;MACAmB,SAAS,CAACpB,eAAe,EAAEK,aAAa,CAAC,CAAC;MAAA,CACzCgB,IAAI,CAACC,QAAQ,IAAI;QAChBzB,SAAS,CAACyB,QAAQ,CAACC,KAAK,CAAC;QACzBzB,QAAQ,CAAE,SAAQ,CAAC;MAEnB,CAAC,CAAC,CAAC0B,KAAK,CAACC,KAAK,IAAI;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACN;EAGF;EAAC;EAGD,oBACEhC,OAAA;IAAAmC,QAAA,gBACEnC,OAAA;MAAAmC,QAAA,EAAI;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,KAC5C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AAEX;AAACpC,EAAA,CA5CuBF,IAAI;AAAAuC,EAAA,GAAJvC,IAAI;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}